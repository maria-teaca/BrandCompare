[{"D:\\Maria\\social_insiders\\again\\new_front\\src\\index.js":"1","D:\\Maria\\social_insiders\\again\\new_front\\src\\App.js":"2","D:\\Maria\\social_insiders\\again\\new_front\\src\\reportWebVitals.js":"3","D:\\Maria\\social_insiders\\again\\new_front\\src\\components\\Form.js":"4","D:\\Maria\\social_insiders\\again\\new_front\\src\\components\\DatePicker.js":"5","D:\\Maria\\social_insiders\\again\\new_front\\src\\components\\Compare.js":"6","D:\\Maria\\social_insiders\\again\\new_front\\src\\components\\TableRow.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":207,"mtime":1619273137519,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":2205,"mtime":1619344726112,"results":"12","hashOfConfig":"9"},{"size":1820,"mtime":1619289062117,"results":"13","hashOfConfig":"9"},{"size":4723,"mtime":1619344706315,"results":"14","hashOfConfig":"9"},{"size":430,"mtime":1619344693254,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"e6u292",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Maria\\social_insiders\\again\\new_front\\src\\index.js",[],["32","33"],"D:\\Maria\\social_insiders\\again\\new_front\\src\\App.js",[],"D:\\Maria\\social_insiders\\again\\new_front\\src\\reportWebVitals.js",[],"D:\\Maria\\social_insiders\\again\\new_front\\src\\components\\Form.js",[],"D:\\Maria\\social_insiders\\again\\new_front\\src\\components\\DatePicker.js",[],"D:\\Maria\\social_insiders\\again\\new_front\\src\\components\\Compare.js",["34"],"import React from 'react'\r\nimport TableRow from './TableRow'\r\nimport moment from 'moment';\r\n\r\nclass Compare extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            apikey: this.props.apikey,\r\n            date: this.props.date,\r\n            brands: [],\r\n            followers: [],\r\n            engagement: []\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            date: nextProps.date,\r\n            brands: [],\r\n            engagement: [],\r\n            followers: []\r\n        });\r\n        this.componentDidMount();\r\n        if (this.state.brands.length > 0)\r\n            this.getBrandFollowing(this.state.brands);\r\n    }\r\n\r\n    getBrandFollowing(brands) {\r\n        // get secondary information for each brand => followers / engagement\r\n        brands.map((value, index) => {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            \r\n            var raw = JSON.stringify({\r\n                \"apikey\":this.state.apikey,\r\n                \"method\":\"partner_api.get_brand_data\",\r\n                \"params\":{\r\n                    \"projectname\":\"Automotive\",\r\n                    \"brandname\":value.brandname,\r\n                    \"date\":{\r\n                        \"start\": moment(this.state.date, 'YYYY-MM-DD').unix() * 1000,\r\n                        \"end\": moment(this.state.date, 'YYYY-MM-DD').unix() * 1000 + 1592000000\r\n                    }\r\n                }\r\n            });\r\n            \r\n            var requestOptions = {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: 'follow'\r\n            };\r\n            \r\n            fetch(\"http://localhost:3001/requests\", requestOptions)\r\n                .then(response => response.json())\r\n                .then(json => json.result)\r\n                .then(res => res.kpis)\r\n                .then(res => {\r\n                    this.setState({\r\n                        'followers': this.state.followers.concat(res.total_fans.current_period.abbr_string_1f)\r\n                    });\r\n                    this.setState({\r\n                        'engagement': this.state.engagement.concat(res.total_engagement.current_period.abbr_string_1f)\r\n                    })\r\n                })\r\n                .catch(error => console.log('error', error));\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        // get initial brand datea => brands\r\n        console.log(\"refreshed\");\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        var raw = JSON.stringify({\"apikey\":this.props.apikey,\"method\":\"partner_api.get_brands\",\"params\":{\"projectname\":\"Automotive\"}});\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:3001/requests\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(json => json.result)\r\n            .then(res => this.setState({ 'brands': res }));\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Brand Name</th>\r\n                        <th scope=\"col\">Total Profiles</th>\r\n                        <th scope=\"col\">Total Followers</th>\r\n                        <th scope=\"col\">Total Engagement</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {(this.state.brands.length > 0 &&\r\n                          this.state.followers.length > 0 &&\r\n                          this.state.engagement.length > 0) ?\r\n                            this.state.brands.map((value, index) => {\r\n                                return <TableRow\r\n                                        index={index + 1}\r\n                                        name={value.brandname}\r\n                                        profiles={value.profiles.length}\r\n                                        followers={this.state.followers[index]}\r\n                                        engagement={this.state.engagement[index]}\r\n                                />;\r\n                            })\r\n                            : <TableRow\r\n                               name=\"Select date...\" />\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Compare;","D:\\Maria\\social_insiders\\again\\new_front\\src\\components\\TableRow.js",[],{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"39","severity":1,"message":"40","line":30,"column":35,"nodeType":"41","messageId":"42","endLine":30,"endColumn":37},"no-native-reassign",["43"],"no-negated-in-lhs",["44"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]