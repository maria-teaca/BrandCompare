{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Maria\\\\social_insiders\\\\again\\\\new_front\\\\src\\\\components\\\\Compare.js\";\nimport React from 'react';\nimport TableRow from './TableRow';\nimport moment from 'moment';\n\nclass Compare extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apikey: this.props.apikey,\n      date: this.props.date,\n      brands: [],\n      // turn these into static lists\n      followers: [],\n      engagement: []\n    };\n  } // move getBrandFollowing here\n\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      date: nextProps.date,\n      brands: [],\n      engagement: [],\n      followers: []\n    });\n    this.componentDidMount();\n    if (this.state.brands.length > 0) this.getBrandFollowing(this.state.brands);\n  }\n\n  getBrandFollowing(brands) {\n    console.log(moment(this.state.date, 'YYYY-MM-DD').unix() * 1000);\n    console.log((moment(this.state.date, 'YYYY-MM-DD').unix() + 1592000000) * 1000); // get secondary information for each brand => followers / engagement\n\n    brands.map((value, index) => {\n      var myHeaders = new Headers();\n      myHeaders.append(\"Content-Type\", \"application/json\");\n      var raw = JSON.stringify({\n        \"apikey\": this.state.apikey,\n        \"method\": \"partner_api.get_brand_data\",\n        \"params\": {\n          \"projectname\": \"Automotive\",\n          \"brandname\": value.brandname,\n          \"date\": {\n            \"start\": moment(this.state.date, 'YYYY-MM-DD').unix() * 1000,\n            \"end\": (moment(this.state.date, 'YYYY-MM-DD').unix() + 1592000000) * 1000\n          }\n        }\n      });\n      var requestOptions = {\n        method: 'POST',\n        headers: myHeaders,\n        body: raw,\n        redirect: 'follow'\n      };\n      fetch(\"http://localhost:3001/requests\", requestOptions).then(response => response.json()).then(json => json.result).then(res => res.kpis).then(res => {\n        console.log(res);\n        this.setState({\n          'followers': this.state.followers.concat(res.total_fans.current_period.abbr_string_1f)\n        });\n        this.setState({\n          'engagement': this.state.engagement.concat(JSON.stringify(res.total_engagement))\n        }); // this.state.followers.concat(res.total_fans.current_period.abbr_string_1f);\n        // this.state.engagement.concat(res.total_engagement.current_period.abbr_string_1f);\n\n        console.log(res.total_fans.current_period.abbr_string_1f);\n        console.log(res.total_engagement.current_period.abbr_string_1f);\n      }).catch(error => console.log('error', error));\n    });\n  }\n\n  componentDidMount() {\n    // get initial brand datea => brands\n    console.log(\"refreshed\");\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      \"apikey\": this.props.apikey,\n      \"method\": \"partner_api.get_brands\",\n      \"params\": {\n        \"projectname\": \"Automotive\"\n      }\n    });\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    fetch(\"http://localhost:3001/requests\", requestOptions).then(response => response.json()).then(json => json.result).then(res => this.setState({\n      'brands': res\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-hover\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Brand Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Total Profiles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Total Followers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Total Engagement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.brands.length > 0 && this.state.followers.length > 0 && this.state.engagement.length > 0 ? this.state.brands.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              index: index + 1,\n              name: value.brandname,\n              profiles: value.profiles.length,\n              followers: this.state.followers[index],\n              engagement: this.state.engagement[index]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 40\n            }, this);\n          }) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Compare; // import React from 'react';\n// class Compare extends React.Component {\n//   componentDidMount() {\n//     const apiUrl = 'https://api.github.com/users/hacktivist123/repos';\n//     fetch(apiUrl)\n//       .then((response) => response.json())\n//       .then((data) => console.log('This is your data', data));\n//   }\n//   render() {\n//     return <h1>my Component has Mounted, Check the browser 'console' </h1>;\n//   }\n// }\n// export default Compare;","map":{"version":3,"sources":["D:/Maria/social_insiders/again/new_front/src/components/Compare.js"],"names":["React","TableRow","moment","Compare","Component","constructor","props","state","apikey","date","brands","followers","engagement","componentWillReceiveProps","nextProps","setState","componentDidMount","length","getBrandFollowing","console","log","unix","map","value","index","myHeaders","Headers","append","raw","JSON","stringify","brandname","requestOptions","method","headers","body","redirect","fetch","then","response","json","result","res","kpis","concat","total_fans","current_period","abbr_string_1f","total_engagement","catch","error","render","profiles"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport TableRow from './TableRow'\r\nimport moment from 'moment';\r\n\r\nclass Compare extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            apikey: this.props.apikey,\r\n            date: this.props.date,\r\n            brands: [],\r\n            // turn these into static lists\r\n            followers: [],\r\n            engagement: []\r\n        };\r\n    }\r\n    // move getBrandFollowing here\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({\r\n            date: nextProps.date,\r\n            brands: [],\r\n            engagement: [],\r\n            followers: []\r\n        });\r\n        this.componentDidMount();\r\n        if (this.state.brands.length > 0)\r\n            this.getBrandFollowing(this.state.brands);\r\n    }\r\n\r\n    getBrandFollowing(brands) {\r\n        console.log(moment(this.state.date, 'YYYY-MM-DD').unix() * 1000);\r\n        console.log((moment(this.state.date, 'YYYY-MM-DD').unix() + 1592000000) * 1000);\r\n        // get secondary information for each brand => followers / engagement\r\n        brands.map((value, index) => {\r\n            var myHeaders = new Headers();\r\n            myHeaders.append(\"Content-Type\", \"application/json\");\r\n            \r\n            var raw = JSON.stringify({\r\n                \"apikey\":this.state.apikey,\r\n                \"method\":\"partner_api.get_brand_data\",\r\n                \"params\":{\r\n                    \"projectname\":\"Automotive\",\r\n                    \"brandname\":value.brandname,\r\n                    \"date\":{\r\n                        \"start\": moment(this.state.date, 'YYYY-MM-DD').unix() * 1000,\r\n                        \"end\": (moment(this.state.date, 'YYYY-MM-DD').unix() + 1592000000) * 1000\r\n                    }\r\n                }\r\n            });\r\n            \r\n            var requestOptions = {\r\n                method: 'POST',\r\n                headers: myHeaders,\r\n                body: raw,\r\n                redirect: 'follow'\r\n            };\r\n            \r\n            fetch(\"http://localhost:3001/requests\", requestOptions)\r\n                .then(response => response.json())\r\n                .then(json => json.result)\r\n                .then(res => res.kpis)\r\n                .then(res => {\r\n                    console.log(res);\r\n                    this.setState({\r\n                        'followers': this.state.followers.concat(res.total_fans.current_period.abbr_string_1f)\r\n                    });\r\n                    this.setState({\r\n                        'engagement': this.state.engagement.concat(JSON.stringify(res.total_engagement))\r\n                    })\r\n                    // this.state.followers.concat(res.total_fans.current_period.abbr_string_1f);\r\n                    // this.state.engagement.concat(res.total_engagement.current_period.abbr_string_1f);\r\n                    console.log(res.total_fans.current_period.abbr_string_1f);\r\n                    console.log(res.total_engagement.current_period.abbr_string_1f);\r\n                })\r\n                .catch(error => console.log('error', error));\r\n        });\r\n    }\r\n\r\n    componentDidMount() {\r\n        // get initial brand datea => brands\r\n        console.log(\"refreshed\");\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        var raw = JSON.stringify({\"apikey\":this.props.apikey,\"method\":\"partner_api.get_brands\",\"params\":{\"projectname\":\"Automotive\"}});\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:3001/requests\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(json => json.result)\r\n            .then(res => this.setState({ 'brands': res }));\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Brand Name</th>\r\n                        <th scope=\"col\">Total Profiles</th>\r\n                        <th scope=\"col\">Total Followers</th>\r\n                        <th scope=\"col\">Total Engagement</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {(this.state.brands.length > 0 &&\r\n                          this.state.followers.length > 0 &&\r\n                          this.state.engagement.length > 0) ?\r\n                            this.state.brands.map((value, index) => {\r\n                                return <TableRow\r\n                                        index={index + 1}\r\n                                        name={value.brandname}\r\n                                        profiles={value.profiles.length}\r\n                                        followers={this.state.followers[index]}\r\n                                        engagement={this.state.engagement[index]}\r\n                                />;\r\n                            })\r\n                            : null\r\n                        }\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Compare;\r\n\r\n// import React from 'react';\r\n\r\n// class Compare extends React.Component {\r\n//   componentDidMount() {\r\n//     const apiUrl = 'https://api.github.com/users/hacktivist123/repos';\r\n//     fetch(apiUrl)\r\n//       .then((response) => response.json())\r\n//       .then((data) => console.log('This is your data', data));\r\n//   }\r\n//   render() {\r\n//     return <h1>my Component has Mounted, Check the browser 'console' </h1>;\r\n//   }\r\n// }\r\n// export default Compare;\r\n"]},"metadata":{},"sourceType":"module"}