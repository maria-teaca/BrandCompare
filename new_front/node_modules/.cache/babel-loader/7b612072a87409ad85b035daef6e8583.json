{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Maria\\\\social_insiders\\\\again\\\\new_front\\\\src\\\\components\\\\Compare.js\";\nimport React from 'react';\nimport TableRow from './TableRow';\nimport moment from 'moment';\n\nclass Compare extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apikey: this.props.apikey,\n      date: this.props.date,\n      brands: [],\n      followers: [],\n      engagement: []\n    };\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      date: nextProps.date\n    });\n    this.componentDidMount();\n  }\n\n  componentDidMount() {\n    // get initial brand datea => brands\n    console.log(\"refreshed\");\n    var myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    var raw = JSON.stringify({\n      \"apikey\": this.props.apikey,\n      \"method\": \"partner_api.get_brands\",\n      \"params\": {\n        \"projectname\": \"Automotive\"\n      }\n    });\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    fetch(\"http://localhost:3001/requests\", requestOptions).then(response => response.json()).then(json => json.result).then(res => this.setState({\n      'brands': res\n    })); // get secondary information for each brand => followers / engagement\n\n    for (const key in object) {\n      if (Object.hasOwnProperty.call(object, key)) {\n        const element = object[key];\n      }\n    }\n\n    myHeaders = new Headers();\n    myHeaders.append(\"Content-Type\", \"application/json\");\n    raw = JSON.stringify({\n      \"apikey\": this.state.apikey,\n      \"method\": \"partner_api.get_brand_data\",\n      \"params\": {\n        \"projectname\": \"Automotive\",\n        \"brandname\": \"BMW\",\n        \"date\": {\n          \"start\": 1616694678383,\n          \"end\": 1618286678383\n        }\n      }\n    });\n    var requestOptions = {\n      method: 'POST',\n      headers: myHeaders,\n      body: raw,\n      redirect: 'follow'\n    };\n    fetch(\"http://localhost:3001/requests\", requestOptions).then(response => response.text()).then(result => console.log(result)).catch(error => console.log('error', error));\n    var unixTimestamp = moment('2012.08.10', 'YYYY.MM.DD').unix();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table table-hover\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"#\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Brand Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Total Profiles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Total Followers\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              scope: \"col\",\n              children: \"Total Engagement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: this.state.brands.length > 0 ? this.state.brands.map((value, index) => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              index: index + 1,\n              name: value.brandname,\n              profiles: value.profiles.length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 40\n            }, this);\n          }) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Compare; // import React from 'react';\n// class Compare extends React.Component {\n//   componentDidMount() {\n//     const apiUrl = 'https://api.github.com/users/hacktivist123/repos';\n//     fetch(apiUrl)\n//       .then((response) => response.json())\n//       .then((data) => console.log('This is your data', data));\n//   }\n//   render() {\n//     return <h1>my Component has Mounted, Check the browser 'console' </h1>;\n//   }\n// }\n// export default Compare;","map":{"version":3,"sources":["D:/Maria/social_insiders/again/new_front/src/components/Compare.js"],"names":["React","TableRow","moment","Compare","Component","constructor","props","state","apikey","date","brands","followers","engagement","componentWillReceiveProps","nextProps","setState","componentDidMount","console","log","myHeaders","Headers","append","raw","JSON","stringify","requestOptions","method","headers","body","redirect","fetch","then","response","json","result","res","key","object","Object","hasOwnProperty","call","element","text","catch","error","unixTimestamp","unix","render","length","map","value","index","brandname","profiles"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport TableRow from './TableRow'\r\nimport moment from 'moment';\r\n\r\nclass Compare extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            apikey: this.props.apikey,\r\n            date: this.props.date,\r\n            brands: [],\r\n            followers: [],\r\n            engagement: []\r\n        };\r\n    }\r\n    componentWillReceiveProps(nextProps) {\r\n        this.setState({ date: nextProps.date });\r\n        this.componentDidMount();\r\n    }\r\n    componentDidMount() {\r\n        // get initial brand datea => brands\r\n        console.log(\"refreshed\");\r\n        var myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n\r\n        var raw = JSON.stringify({\"apikey\":this.props.apikey,\"method\":\"partner_api.get_brands\",\"params\":{\"projectname\":\"Automotive\"}});\r\n\r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n\r\n        fetch(\"http://localhost:3001/requests\", requestOptions)\r\n            .then(response => response.json())\r\n            .then(json => json.result)\r\n            .then(res => this.setState({ 'brands': res }));\r\n        \r\n        // get secondary information for each brand => followers / engagement\r\n        for (const key in object) {\r\n            if (Object.hasOwnProperty.call(object, key)) {\r\n                const element = object[key];\r\n                \r\n            }\r\n        }\r\n        myHeaders = new Headers();\r\n        myHeaders.append(\"Content-Type\", \"application/json\");\r\n        \r\n        raw = JSON.stringify({\r\n            \"apikey\":this.state.apikey,\r\n            \"method\":\"partner_api.get_brand_data\",\r\n            \"params\":{\"projectname\":\"Automotive\",\r\n            \"brandname\":\"BMW\",\r\n            \"date\":{\"start\":1616694678383,\"end\":1618286678383}}});\r\n        \r\n        var requestOptions = {\r\n            method: 'POST',\r\n            headers: myHeaders,\r\n            body: raw,\r\n            redirect: 'follow'\r\n        };\r\n        \r\n        fetch(\"http://localhost:3001/requests\", requestOptions)\r\n            .then(response => response.text())\r\n            .then(result => console.log(result))\r\n            .catch(error => console.log('error', error));\r\n        var unixTimestamp = moment('2012.08.10', 'YYYY.MM.DD').unix();\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <table className=\"table table-hover\">\r\n                    <thead>\r\n                        <tr>\r\n                        <th scope=\"col\">#</th>\r\n                        <th scope=\"col\">Brand Name</th>\r\n                        <th scope=\"col\">Total Profiles</th>\r\n                        <th scope=\"col\">Total Followers</th>\r\n                        <th scope=\"col\">Total Engagement</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {(this.state.brands.length > 0) ?\r\n                            this.state.brands.map((value, index) => {\r\n                                return <TableRow\r\n                                        index={index + 1}\r\n                                        name={value.brandname}\r\n                                        profiles={value.profiles.length}/>\r\n                            })\r\n                            : null\r\n                        }\r\n                        \r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Compare;\r\n\r\n// import React from 'react';\r\n\r\n// class Compare extends React.Component {\r\n//   componentDidMount() {\r\n//     const apiUrl = 'https://api.github.com/users/hacktivist123/repos';\r\n//     fetch(apiUrl)\r\n//       .then((response) => response.json())\r\n//       .then((data) => console.log('This is your data', data));\r\n//   }\r\n//   render() {\r\n//     return <h1>my Component has Mounted, Check the browser 'console' </h1>;\r\n//   }\r\n// }\r\n// export default Compare;\r\n"]},"metadata":{},"sourceType":"module"}